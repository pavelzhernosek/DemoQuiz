{"version":3,"sources":["components/ActiveQuiz/ActiveQuiz.css","containers/Quiz/Quiz.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.css","components/UI/Button/Button.css","components/FinishedQuiz/FinishedQuiz.css","hoc/Layout/Layout.css","components/ActiveQuiz/AnswersList/AnswersList.css","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/UI/Button/Button.js","components/ActiveQuiz/ActiveQuiz.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","ActiveQuiz","Question","FontLicense","Quiz","QuizWrapper","AnswerItem","success","error","Button","disabled","primary","FinishedQuiz","Layout","AnswersList","state","menu","toggleMenuHandler","_this","setState","menuCloseHandler","react_default","a","createElement","className","classes","this","props","children","Component","cls","push","join","onClick","onAnswerClick","answer","id","text","answers","map","index","AnswersList_AnswerItem_AnswerItem","key","type","answerId","onAnswerClickHandler","_this2","_this$props","question","answerNumber","quizLength","getAnswer","ActiveQuiz_AnswersList_AnswersList","UI_Button_Button","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","userChoice","isFinished","activeQuestion","answerState","rightAnswerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","defineProperty","retryHandler","components_FinishedQuiz_FinishedQuiz","ActiveQuiz_ActiveQuiz_ActiveQuiz","App","hoc_Layout_Layout","containers_Quiz_Quiz","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ed5de3d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz__ActiveQuiz--1xPLH\",\"Question\":\"ActiveQuiz__Question--2AtZS\",\"FontLicense\":\"ActiveQuiz__FontLicense--1SGxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz__Quiz--3J8Ip\",\"QuizWrapper\":\"Quiz__QuizWrapper--2cJp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem__AnswerItem--2xulf\",\"success\":\"AnswerItem__success--17tyF\",\"error\":\"AnswerItem__error--2G-OL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button--QI7b2\",\"disabled\":\"Button__disabled--1Vm-0\",\"error\":\"Button__error--tZCD8\",\"success\":\"Button__success--3d-85\",\"primary\":\"Button__primary--2Lss2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz__FinishedQuiz--3-Dtz\",\"success\":\"FinishedQuiz__success--1N7XY\",\"error\":\"FinishedQuiz__error--34veZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout--2C2_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList__AnswersList--1WLwo\"};","import React, { Component } from \"react\";\nimport classes from \"./Layout.css\";\n// import MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\n// import Drawer from \"../../components/Navigation/Drawer/Drawer\";\n\nclass Layout extends Component {\n  state = {\n    menu: false\n  };\n\n  toggleMenuHandler = () => {\n    this.setState({\n      menu: !this.state.menu\n    });\n  };\n\n  menuCloseHandler = () => {\n    this.setState({\n      menu: false\n    });\n  };\n\n  render() {\n    return (\n      <div className={classes.Layout}>\n        {/*<Drawer isOpen={this.state.menu} onClose={this.menuCloseHandler} />*/}\n\n        {/*<MenuToggle*/}\n        {/*  onToggle={this.toggleMenuHandler}*/}\n        {/*  isOpen={this.state.menu}*/}\n        {/*/>*/}\n\n        <main>{this.props.children}</main>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from \"react\";\nimport classes from \"./AnswerItem.css\";\n\nconst AnswerItem = props => {\n  const cls = [classes.AnswerItem];\n\n  if (props.state) {\n    cls.push(classes[props.state]);\n  }\n\n  return (\n    <li\n      className={cls.join(\" \")}\n      onClick={() => props.onAnswerClick(props.answer.id)}\n    >\n      {props.answer.text}\n    </li>\n  );\n};\n\nexport default AnswerItem;\n","import React from \"react\";\nimport classes from \"./AnswersList.css\";\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\n\nconst AnswersList = props => {\n  return (\n    <ul className={classes.AnswersList}>\n      {props.answers.map((answer, index) => {\n        return (\n          <AnswerItem\n            key={index}\n            answer={answer}\n            onAnswerClick={props.onAnswerClick}\n            state={props.state ? props.state[answer.id] : null}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default AnswersList;\n","import React from \"react\";\nimport classes from \"./Button.css\";\n\nconst Button = props => {\n  const cls = [classes.Button, classes[props.type]];\n\n  return (\n    <button\n      onClick={props.onClick}\n      className={cls.join(\" \")}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport classes from \"./ActiveQuiz.css\";\nimport AnswersList from \"./AnswersList/AnswersList\";\nimport Button from \"../../components/UI/Button/Button\";\n\nexport default class ActiveQuiz extends Component {\n  state = {\n    answerId: null\n  };\n\n  onAnswerClickHandler = answerId => {\n    this.setState({\n      answerId\n    });\n  };\n\n  render() {\n    const {\n      question,\n      answerNumber,\n      quizLength,\n      state,\n      answers,\n      getAnswer\n    } = this.props;\n\n    return (\n      <div className={classes.ActiveQuiz}>\n        <p className={classes.Question}>\n          <span>\n            <strong>{answerNumber}.</strong>&nbsp;\n            {question}\n          </span>\n\n          <small className={classes.FontLicense}>\n            {answerNumber} из {quizLength}\n          </small>\n        </p>\n\n        <AnswersList\n          state={state}\n          answers={answers}\n          onAnswerClick={this.onAnswerClickHandler}\n        />\n\n        <Button type={\"primary\"} onClick={() => getAnswer(this.state.answerId)}>\n          Next\n        </Button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport classes from \"./FinishedQuiz.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst FinishedQuiz = props => {\n  const successCount = Object.keys(props.results).reduce((total, key) => {\n    if (props.results[key] === \"success\") {\n      total++;\n    }\n\n    return total;\n  }, 0);\n\n  return (\n    <div className={classes.FinishedQuiz}>\n      <ul>\n        {props.quiz.map((quizItem, index) => {\n          const cls = [\n            \"fa\",\n            props.results[quizItem.id] === \"error\" ? \"fa-times\" : \"fa-check\",\n            classes[props.results[quizItem.id]]\n          ];\n\n          return (\n            <li key={index}>\n              <strong>{index + 1}</strong>.&nbsp;\n              {quizItem.question}\n              <i className={cls.join(\" \")} />\n            </li>\n          );\n        })}\n      </ul>\n\n      <p>\n        Правильно {successCount} из {props.quiz.length}\n      </p>\n\n      <div>\n        <Button onClick={props.onRetry} type={\"primary\"}>\n          Повторить\n        </Button>\n        <Button onClick={props.onRetry} type={\"success\"}>\n          Перейти в список тестов\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default FinishedQuiz;\n","import React, { Component } from \"react\";\nimport classes from \"./Quiz.css\";\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\n\nclass Quiz extends Component {\n  state = {\n    results: {}, //{[id]: success error}\n    userChoice: null,\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null, // { [id]: 'success' 'error' }\n    quiz: [\n      {\n        question: \"How many hours a day do you watch TV?\",\n        rightAnswerId: 3,\n        id: 1,\n        answers: [\n          { text: \"On Tuesday\", id: 1 },\n          { text: \"I watch the news\", id: 2 },\n          { text: \"About two hours\", id: 3 },\n          { text: \"In my living\", id: 4 }\n        ]\n      },\n      {\n        question: \"What will you do this afternoon?\",\n        rightAnswerId: 1,\n        id: 2,\n        answers: [\n          { text: \"I'll play soccer\", id: 1 },\n          { text: \"I was playing soccer\", id: 2 },\n          { text: \"I play soccer\", id: 3 },\n          { text: \"I played soccer\", id: 4 }\n        ]\n      },\n      {\n        question: \"I got up __ than my mother\",\n        rightAnswerId: 2,\n        id: 3,\n        answers: [\n          { text: \"the earliest\", id: 1 },\n          { text: \"earlier\", id: 2 },\n          { text: \"earliest\", id: 3 },\n          { text: \"early\", id: 4 }\n        ]\n      },\n      {\n        question: 'How do you spell \"dog\" ?',\n        rightAnswerId: 3,\n        id: 4,\n        answers: [\n          { text: \"Cat\", id: 1 },\n          { text: \"No, i don't\", id: 2 },\n          { text: \"D-O-G\", id: 3 },\n          { text: \"I have one dog\", id: 4 }\n        ]\n      },\n      {\n        question: \"Where do you usually eat lunch?\",\n        rightAnswerId: 1,\n        id: 5,\n        answers: [\n          { text: \"In the cafeteria\", id: 1 },\n          { text: \"With Jane\", id: 2 },\n          { text: \"Sandwich\", id: 3 },\n          { text: \"At 12:00\", id: 4 }\n        ]\n      },\n      {\n        question: \"What do you like to drink?\",\n        rightAnswerId: 4,\n        id: 6,\n        answers: [\n          { text: \"Two \", id: 1 },\n          { text: \"Saturday evening\", id: 2 },\n          { text: \"With my friends\", id: 3 },\n          { text: \"Coffee\", id: 4 }\n        ]\n      },\n      {\n        question: \"Who do you usually go shopping with?\",\n        rightAnswerId: 1,\n        id: 7,\n        answers: [\n          { text: \"By myself\", id: 1 },\n          { text: \"Downtown\", id: 2 },\n          { text: \"On Sunday\", id: 3 },\n          { text: \"Two or three hours\", id: 4 }\n        ]\n      },\n      {\n        question: \"What is your busiest day of the week?\",\n        rightAnswerId: 1,\n        id: 8,\n        answers: [\n          { text: \"Tuesday\", id: 1 },\n          { text: \"Every day\", id: 2 },\n          { text: \"In the morning\", id: 3 },\n          { text: \"Last week\", id: 4 }\n        ]\n      },\n      {\n        question: \"How long did you study last night?\",\n        rightAnswerId: 3,\n        id: 9,\n        answers: [\n          { text: \"With Bob\", id: 1 },\n          { text: \"In my room\", id: 2 },\n          { text: \"For three hours\", id: 3 },\n          { text: \"English\", id: 4 }\n        ]\n      },\n      {\n        question: \"Will you __ your car to school tomorrow?\",\n        rightAnswerId: 3,\n        id: 10,\n        answers: [\n          { text: \"driving\", id: 1 },\n          { text: \"drives\", id: 2 },\n          { text: \"drive\", id: 3 },\n          { text: \"drove\", id: 4 }\n        ]\n      }\n    ]\n  };\n\n  onAnswerClickHandler = answerId => {\n    this.setState({\n      userChoice: answerId\n    });\n\n    const question = this.state.quiz[this.state.activeQuestion];\n    const results = this.state.results;\n\n    const timeout = window.setTimeout(() => {\n      if (this.isQuizFinished()) {\n        this.setState({\n          isFinished: true\n        });\n      } else {\n        this.setState({\n          activeQuestion: this.state.activeQuestion + 1,\n          answerState: null,\n          userChoice: null\n        });\n      }\n      window.clearTimeout(timeout);\n    }, 1000);\n\n    if (question.rightAnswerId === answerId) {\n      results[question.id] = \"success\";\n      this.setState({\n        answerState: { [answerId]: \"success\" },\n        results\n      });\n    } else {\n      results[question.id] = \"error\";\n      this.setState({\n        answerState: { [answerId]: \"error\" },\n        results\n      });\n    }\n  };\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\n  }\n\n  retryHandler = () => {\n    this.setState({\n      activeQuestion: 0,\n      answerState: null,\n      isFinished: false,\n      results: {}\n    });\n  };\n\n  render() {\n    return (\n      <div className={classes.Quiz}>\n        <div className={classes.QuizWrapper}>\n          <h1>Ответьте на все вопросы</h1>\n\n          {this.state.isFinished ? (\n            <FinishedQuiz\n              results={this.state.results}\n              quiz={this.state.quiz}\n              onRetry={this.retryHandler}\n            />\n          ) : (\n            <ActiveQuiz\n              answers={this.state.quiz[this.state.activeQuestion].answers}\n              question={this.state.quiz[this.state.activeQuestion].question}\n              getAnswer={this.onAnswerClickHandler}\n              quizLength={this.state.quiz.length}\n              answerNumber={this.state.activeQuestion + 1}\n              state={this.state.answerState}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Quiz;\n","import React, {Component} from 'react'\nimport Layout from './hoc/Layout/Layout'\nimport Quiz from './containers/Quiz/Quiz'\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Quiz />\n      </Layout>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}